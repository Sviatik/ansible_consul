---
- name: kill consul
  shell: pkill consul
  ignore_errors: yes

- name: rm all conf1
  file: path=/etc/consul state=absent

- name: rm all conf2
  file: path=/var/lib/consul state=absent

- name: rm all conf3
  file: path=/var/consul state=absent

- name: rm consul
  file: path=/usr/bin/consul state=absent

- name: rm consul
  file: path=/usr/local/bin/consul state=absent

- name: install consul
  unarchive:
    src: '{{ consul_down_url }}'
    dest: /usr/bin
    remote_src: True
    creates: /usr/bin/consul

- name: conf firewall on master
  firewalld: port=8300/tcp permanent=true immediate=true state=enabled
  when: "'{{ ansible_default_ipv4.address }}' == '{{ hostvars['balancer']['ansible_all_ipv4_addresses'][0] }}'"

- name: conf firewall on master
  firewalld: port=8301/tcp permanent=true immediate=true state=enabled
  when: "'{{ ansible_default_ipv4.address }}' != '{{ hostvars['balancer']['ansible_all_ipv4_addresses'][0] }}'"

- name: conf firewall on master
  firewalld: port=8500/tcp permanent=true immediate=true state=enabled
  when: "'{{ ansible_default_ipv4.address }}' != '{{ hostvars['balancer']['ansible_all_ipv4_addresses'][0] }}'"

- name: conf firewall on master
  firewalld: port=8500/tcp permanent=true immediate=true state=enabled
  when: "'{{ ansible_default_ipv4.address }}' == '{{ hostvars['balancer']['ansible_all_ipv4_addresses'][0] }}'"

- name: mkdir etc
  file: path=/etc/consul.d/{{ item }} state=directory recurse=yes
  with_items:
    - client
    - server
    - bootstrap

- name: mkdir var
  file: path=/var/consul state=directory

#- name: update system
#  yum: name='*' state=latest

- name: create encrypted key
  shell: consul keygen
  register: key
  when: ansible_default_ipv4.address == hostvars['balancer']['ansible_all_ipv4_addresses'][0]

- name: debug
  debug: msg={{hostvars['balancer']['key']['stdout']}}
  
- name: copy conf bootstrap
  template: src=bootstr.serv.conf.j2 dest=/etc/consul.d/bootstrap/config.json
  when: ansible_default_ipv4.address == hostvars['balancer']['ansible_all_ipv4_addresses'][0]

- name: copy conf server
  template: src=serv.conf.j2 dest=/etc/consul.d/server/config.json 
  when: ansible_default_ipv4.address == hostvars['app1']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['app2']['ansible_all_ipv4_addresses'][0]

- name: copy conf client
  template: src=client.conf.j2 dest=/etc/consul.d/client/config.json 
  when: ansible_default_ipv4.address == hostvars['Galera1']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['Galera2']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['Galera3']['ansible_all_ipv4_addresses'][0]


- name: start master consul
  shell: nohup consul agent -config-dir=/etc/consul.d/bootstrap &
  when: ansible_default_ipv4.address == hostvars['balancer']['ansible_all_ipv4_addresses'][0]


- name: start master consul
  shell: nohup consul agent -config-dir=/etc/consul.d/server &
  when: ansible_default_ipv4.address == hostvars['app1']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['app2']['ansible_all_ipv4_addresses'][0]

- name: start slave consul
  shell: nohup consul agent -config-dir=/etc/consul.d/client &
  when: ansible_default_ipv4.address == hostvars['Galera1']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['Galera2']['ansible_all_ipv4_addresses'][0] or ansible_default_ipv4.address == hostvars['Galera3']['ansible_all_ipv4_addresses'][0]

